name: M3U8_Creator

on:
  workflow_dispatch:
  # Run every 2 hours after https://github.com/bitsbb01/iptvcat-scrapper
  # 12.10 UTC Time, 06.10 Central Time
  # Changed to every 2 hours, due to including Youtube links and Pluto, so those links are always correct and the playlist is always upto date.
  schedule:
    - cron: "0 0/2 * * *"

jobs:

  Running_M3U8_Creator:
    name: Running M3U8 Creator
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v3

      - name: Last Attempts
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          echo $(date) >> last_attempt.txt
          cat last_attempt.txt
          ls -ltr
          git status
          git add last_attempt.txt
          git status
          git commit -m "cron: setting last attempt time stamp" -a
          git status
          
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check *.M3u8 File existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "./CompiledallStreams.m3u, ./epg/epg_ripper_ALL_SOURCES1.xml.gz"

      - uses: actions/checkout@v3
      - name: If *.M3U8 Files exists - Then Cleanup
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git rm ./tests/m3u8/*.m3u8
          git rm ./m3u8/*.m3u8
          git rm ./*.m3u8
          git rm ./tests/epg/*.gz
          git rm ./epg/*.gz
          git rm ./temp/m3u8_static/*.m3u8
          git rm ./temp/m3u8_static/all/*.m3u8
          git rm ./temp/all_streams_tmp/*.json
          git status
          git push          
          git commit -m "cron: Updated by Bot" -a
         
        
      ### SETUP THE ENVIRONMENT
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Setup Environment
        # e.g. create work dirst, store in env variables ... https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions
        run: |
          echo "IPTVCAT_DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
          echo "IPTVCAT_DATE_YESTERDAY=$(date -d "yesterday 7:00" '+%Y-%m-%d')" >> $GITHUB_ENV
          echo "IPTVCAT_DOWNLOAD_DIR=./temp/iptvcat" >> $GITHUB_ENV
          echo "M3U8_DIR=./tests/m3u8/" >> $GITHUB_ENV
          echo "EPG_TEMP_DIR=./tests/epg/" >> $GITHUB_ENV
          echo "M3U8_STATIC_DIR=./temp/m3u8_static/" >> $GITHUB_ENV
          echo "M3U8_STATIC_DIR2=./temp/m3u8_static/all/" >> $GITHUB_ENV
          # Update pythonpath used for our scripts
          echo "PYTHONPATH=$PYTHONPATH:${{ github.workspace }}" >> $GITHUB_ENV
      - name: Setup Dirs
        run: |
          echo "IPTVCAT_DATE: '${IPTVCAT_DATE}'"
          echo "IPTVCAT_DATE_YESTERDAY: '${IPTVCAT_DATE_YESTERDAY}'"
          echo "IPTVCAT_DOWNLOAD_DIR: '${IPTVCAT_DOWNLOAD_DIR}'"
          echo "M3U8_DIR: '${M3U8_DIR}'"
          echo "EPG_TEMP_DIR: '${EPG_TEMP_DIR}'"
          echo "M3U8_STATIC_DIR: '${M3U8_STATIC_DIR}'"
          echo "Command: 'mkdir -p ${IPTVCAT_DOWNLOAD_DIR}'"
          mkdir -p ${IPTVCAT_DOWNLOAD_DIR}
          echo "Command: 'mkdir -p ${M3U8_DIR}'"
          mkdir -p ${M3U8_DIR}
          echo "Command: 'mkdir -p ${EPG_TEMP_DIR}'"
          mkdir -p ${EPG_TEMP_DIR}
          echo "Command: 'mkdir -p ${M3U8_STATIC_DIR2}'"
          mkdir -p ${M3U8_STATIC_DIR2}
          echo "Command: 'mkdir -p ${M3U8_STATIC_DIR}'"
          mkdir -p ${M3U8_STATIC_DIR}
          echo "Command: 'ls -alt ${IPTVCAT_DOWNLOAD_DIR}'"
          ls -alt ${IPTVCAT_DOWNLOAD_DIR}
          echo "Command: 'ls -alt ${M3U8_DIR}'"
          ls -alt ${M3U8_DIR}
          echo "Command: 'ls -alt ${EPG_TEMP_DIR}'"
          ls -alt ${EPG_TEMP_DIR}
          echo "Command: 'ls -alt ${M3U8_STATIC_DIR}'"
          ls -alt ${M3U8_STATIC_DIR}
          echo "Command: 'ls -alt ${M3U8_STATIC_DIR2}'"
          ls -alt ${M3U8_STATIC_DIR2}
      - name: Get other m3u8s to add
        run: |
         curl -o "${M3U8_STATIC_DIR}/squidtv.m3u8" "https://raw.githubusercontent.com/bitsbb01/storage/main/squidtv.m3u8" 
         
      - name: Match EPG IDs to Static Files
        run: |
          echo "Command: './scripts/match_epgid_to_names.sh "${M3U8_STATIC_DIR}" "${M3U8_STATIC_DIR}"'"
          ./scripts/match_epgid_to_names.sh "${M3U8_STATIC_DIR}" "${M3U8_STATIC_DIR}"          
          
          ls -alt "${M3U8_STATIC_DIR}"        
 
      - name: Merge Files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          cat ./temp/m3u8_static/*.m3u8 > ./temp/m3u8_static/all/all-staticstreams.m3u8       
          
          ls -alt "${M3U8_STATIC_DIR2}" 
          
      - name: Merge Static All_Streams Files
        run: |
          ls -alt ./temp/m3u8_static/
          ls -alt ./temp/m3u8_static/all/
          echo "Command: './scripts/merge_m3u8_files_in_dirs.sh "./temp/m3u8_static/" "./temp/m3u8_static/all/"'"
          ./scripts/merge_m3u8_files_in_dirs.sh "./temp/m3u8_static/" "./temp/m3u8_static/all/"
          ls -alt ./temp/m3u8_static/
          ls -alt ./temp/m3u8_static/all/ 
          
          
      - name: Get epg
        run: |
         
          echo "Command: './scripts/download_file_allow_failiure.sh "https://github.com/epgshare01/share01/raw/master/epg_ripper_ALL_SOURCES1.xml.gz" "./tests/epg/" "epg_ripper_ALL_SOURCES1.xml.gz"'"
          ./scripts/download_file_allow_failiure.sh "https://github.com/epgshare01/share01/raw/master/epg_ripper_ALL_SOURCES1.xml.gz" "./tests/epg/" "epg_ripper_ALL_SOURCES1.xml.gz"
   
   
      - name: Get EPG from epgshare
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://github.com/epgshare01/share01/raw/master/" "${EPG_TEMP_DIR}" "epg_ripper_ALL_SOURCES1.xml.gz"'"
          ./scripts/download_file_allow_failiure.sh "https://github.com/epgshare01/share01/raw/master/" "${EPG_TEMP_DIR}" "epg_ripper_ALL_SOURCES1.xml.gz"
          
          ls -alt "${EPG_TEMP_DIR}" 
          
          
      - name: Get the main streams json
        run: |        
          echo "Command: './scripts/download_file_allow_failiure.sh "https://github.com/bitsbb01/ez-iptvcat-scraper/blob/master/data/all-streams.json?raw=true" "./temp/all_streams_tmp/" "all-streams.json"'"
          ./scripts/download_file_allow_failiure.sh "https://github.com/bitsbb01/ez-iptvcat-scraper/blob/master/data/all-streams.json?raw=true" "./temp/all_streams_tmp/" "all-streams.json"
          
          
      - name: Get Europe streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest2/master/data/countries/europe.json" "./temp/all_streams_tmp/" "all-europe.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest2/master/data/countries/europe.json" "./temp/all_streams_tmp/" "all-europe.json"

      - name: Get the Africa streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest1/master/data/countries/africa.json" "./temp/all_streams_tmp/" "all-africa.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest1/master/data/countries/africa.json" "./temp/all_streams_tmp/" "all-africa.json"
          
 
      - name: Get the Asia streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest1/master/data/countries/asia.json" "./temp/all_streams_tmp/" "all-asia.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest1/master/data/countries/asia.json" "./temp/all_streams_tmp/" "all-asia.json"
          
 
      - name: Get the Latin America streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest1/master/data/countries/latin%20america.json" "./temp/all_streams_tmp/" "all-latinamerica.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest1/master/data/countries/latin%20america.json" "./temp/all_streams_tmp/" "all-latinamerica.json"
         
 
      - name: Get the Arab streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest1/master/data/countries/arab%20countries.json" "./temp/all_streams_tmp/" "all-arab%20countries.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper-rest1/master/data/countries/arab%20countries.json" "./temp/all_streams_tmp/" "all-arab%20countries.json"
          
          
      - name: Get the UK streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/cat-scrapperuk/master/data/countries/united%20kingdom.json" "./temp/all_streams_tmp/" "uk-streams.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/cat-scrapperuk/master/data/countries/united%20kingdom.json" "./temp/all_streams_tmp/" "uk-streams.json"
          
      - name: Get the North America streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/cat-scrapperus/master/data/countries/united%20states%20of%20america.json" "./temp/all_streams_tmp/" "catusa.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/cat-scrapperus/master/data/countries/united%20states%20of%20america.json" "./temp/all_streams_tmp/" "catusa.json"
          
      - name: Get the Underfined Streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapperundefined/master/data/countries/undefined.json" "./temp/all_streams_tmp/" "catundefined.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapperundefined/master/data/countries/undefined.json" "./temp/all_streams_tmp/" "catundefined.json"
          
      - name: Get the Canada Streams json
        run: |
          echo "Command: './scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper_canada/master/data/countries/canada.json" "./temp/all_streams_tmp/" "canada.json"'"
          ./scripts/download_file_allow_failiure.sh "https://raw.githubusercontent.com/bitsbb01/catscrapper_canada/master/data/countries/canada.json" "./temp/all_streams_tmp/" "canada.json"
          
    
      ### PROCESS THE DATA ###
      - name: Convert all_streams
        run: |
          echo "Command: 'ls -alt ./temp/all_streams_tmp/'"
          ls -alt ./temp/all_streams_tmp/
          echo "Command: 'ls -alt ${M3U8_DIR}'"
          ls -alt ${M3U8_DIR}
          echo "Command: 'python ./scripts/iptvcat/convert_iptvcat_scraper_files.py "./temp/all_streams_tmp/" "${M3U8_DIR}"'"
          python ./scripts/iptvcat/convert_iptvcat_scraper_files.py "./temp/all_streams_tmp/" "${M3U8_DIR}"
          echo "Command: 'ls -alt ./temp/all_streams_tmp/'"
          ls -alt ./temp/all_streams_tmp/
          echo "Command: 'ls -alt ${M3U8_DIR}'"
          ls -alt ${M3U8_DIR}
          
      - name: Merge with Static All_Streams Files
        run: |
          ls -alt ./tests/m3u8/
          ls -alt ${M3U8_STATIC_DIR}
          echo "Command: './scripts/merge_m3u8_files_in_dirs.sh "./tests/m3u8/" "${M3U8_STATIC_DIR}"'"
          ./scripts/merge_m3u8_files_in_dirs.sh "./tests/m3u8/" "${M3U8_STATIC_DIR}"
          ls -alt ./tests/m3u8/
          ls -alt ${M3U8_STATIC_DIR}
                    
      - name: Add EPG URL to files
        run: |
          echo "Command: 'python ./scripts/add_epg_url_into_m3u8.py --epg_url "https://github.com/bitsbb01/m3u8_creator/raw/main/epg/epg_ripper_ALL_SOURCES1.xml.gz,https://raw.githubusercontent.com/Theitfixer85/myepg/master/blueepg.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/PlutoTV/all.xml.gz,https://github.com/DeltaSr95/Combined/raw/master/combined.xml.gz,https://github.com/DeltaSr95/Music/raw/main/fmstreamorg_usa.xml,https://github.com/DeltaSr95/Music/raw/main/live365.xml,https://github.com/botallen/epg/releases/download/latest/epg.xml,https://github.com/matthuisman/i.mjh.nz/raw/master/PlutoTV/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/PBS/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/Plex/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/PlutoTV/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/SamsungTVPlus/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/Stirr/all.xml.gz,https://cutt.ly/Galxytvepg" --m3u8_in_dir "${M3U8_DIR}" --m3u8_out_dir "${M3U8_DIR}"'"
          python ./scripts/add_epg_url_into_m3u8.py --epg_url "https://github.com/bitsbb01/m3u8_creator/raw/main/epg/epg_ripper_ALL_SOURCES1.xml.gz,https://raw.githubusercontent.com/Theitfixer85/myepg/master/blueepg.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/PlutoTV/all.xml.gz,https://github.com/DeltaSr95/Combined/raw/master/combined.xml.gz,https://github.com/DeltaSr95/Music/raw/main/fmstreamorg_usa.xml,https://github.com/DeltaSr95/Music/raw/main/live365.xml,https://github.com/botallen/epg/releases/download/latest/epg.xml,https://github.com/matthuisman/i.mjh.nz/raw/master/PlutoTV/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/PBS/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/Plex/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/PlutoTV/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/SamsungTVPlus/all.xml.gz,https://github.com/matthuisman/i.mjh.nz/raw/master/Stirr/all.xml.gz,https://cutt.ly/Galxytvepg" --m3u8_in_dir "${M3U8_DIR}" --m3u8_out_dir "${M3U8_DIR}"

      - name: Add Channel To Main Categories
        run: |
          echo "Command: 'python ./scripts/import_categories_into_m3u8.py --category_file "./ez_m3u8_creator/categories/main.json" --m3u8_in_dir "${M3U8_DIR}" --m3u8_out_dir "${M3U8_DIR}"'"
          python ./scripts/import_categories_into_m3u8.py --category_file "./ez_m3u8_creator/categories/main.json" --m3u8_in_dir "${M3U8_DIR}" --m3u8_out_dir "${M3U8_DIR}"
 
      - name: Match EPG IDs
        run: |
          echo "Command: './scripts/match_epgid_to_names.sh "${M3U8_DIR}" "${M3U8_DIR}"'"
          ./scripts/match_epgid_to_names.sh "${M3U8_DIR}" "${M3U8_DIR}"
          echo "Command: './scripts/match_epgid_to_names.sh "${M3U8_STATIC_DIR2}" "${M3U8_STATIC_DIR2}"'"
          ./scripts/match_epgid_to_names.sh "${M3U8_STATIC_DIR2}" "${M3U8_STATIC_DIR2}"
                     
      - name: Push all changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.scrapper_token }}
          branch: ${{ github.ref }} 
             
      - name: Copy Static m3u8s
        uses: canastro/copy-file-action@master
        with:
          source: "./temp/m3u8_static/*.m3u8"
          target: "./m3u8"
          flags: '-r'
             
      - name: Copy Static m3u8s all_file
        uses: canastro/copy-file-action@master
        with:
          source: "./temp/m3u8_static/all/*.m3u8"
          target: "./m3u8"
          flags: '-r'
          
      ### This is where the copy function should work, to copy the m3u8 & epg to the data folder ###
      - name: Copy m3u8
        uses: canastro/copy-file-action@master
        with:
          source: "./tests/m3u8/*.m3u8"
          target: "./m3u8"
          flags: '-r'
          
          
      - name: Copy epg
        uses: canastro/copy-file-action@master
        with:
          source: "./tests/epg/*"
          target: "./epg"
          flags: '-r'
    
          
      - name: Copy json
        uses: canastro/copy-file-action@master
        with:
          source: "./temp/iptvcat*"
          target: "./json"
          flags: '-r'
                  
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date '+%Y-%m-%d')"


      - name: Merge All The Files Into Compiled-all-UpdatedStreams.m3u
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          ls -1 ./m3u8/*.m3u8 > ./allstreams.txt
          cat ./tests/m3u8/all-streams.m3u8 ./temp/m3u8_static/all/all-staticstreams.m3u8 > ./Compiled-all-UpdatedStreams.m3u8
          cat ./tests/m3u8/all-streams.m3u8 ./temp/m3u8_static/all/all-staticstreams.m3u8 > ./Compiled-all-Streams.m3u8
          cat ./tests/m3u8/all-streams.m3u8 ./temp/m3u8_static/all/all-staticstreams.m3u8 > ./CompiledallStreams.m3u8
          cat ./tests/m3u8/all-streams.m3u8 ./temp/m3u8_static/all/all-staticstreams.m3u8 > ./Compiled-all-UpdatedStreams.m3u
          cat ./tests/m3u8/all-streams.m3u8 ./temp/m3u8_static/all/all-staticstreams.m3u8 > ./Compiled-all-Streams.m3u
          cat ./tests/m3u8/all-streams.m3u8 ./temp/m3u8_static/all/all-staticstreams.m3u8 > ./CompiledallStreams.m3u
          
      
      - name: Create Workflow Artifact #this is created, so if theres an error, you can look back at previous yml
        uses: actions/upload-artifact@v2
        with:
         name: workflow_${{ steps.date.outputs.date }}
         path: .github/workflows/m3u8_converter.yml
       
       
                           
      - name: Push all changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.scrapper_token }}
          branch: ${{ github.ref }} 
          
      - name: Commit All Files
        uses: zwaldowski/git-commit-action@v1
        with:
             commit_message: Updated by Bot - ${{ steps.date.outputs.date }}
             working_directory: .

      - name: Push Final Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.scrapper_token }}
          branch: ${{ github.ref }}
          
